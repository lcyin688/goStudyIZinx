// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: msg.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgId int32

const (
	MsgId_MSG_Default          MsgId = 0
	MsgId_MSG_CS_Ping          MsgId = 1    // 心跳请求
	MsgId_MSG_SC_Pong          MsgId = 2    // 心跳响应
	MsgId_MSG_CS_Login         MsgId = 101  // 登录请求
	MsgId_MSG_SC_Login         MsgId = 102  // 登录响应
	MsgId_MSG_CS_Register      MsgId = 103  // 注册请求
	MsgId_MSG_SC_Register      MsgId = 104  // 注册响应
	MsgId_MSG_CS_HallInfo      MsgId = 111  // 大厅数据请求
	MsgId_MSG_SC_HallInfo      MsgId = 112  // 大厅数据响应
	MsgId_MSG_CS_CreateRoom    MsgId = 121  // 创建房间请求
	MsgId_MSG_SC_CreateRoom    MsgId = 122  // 创建房间响应
	MsgId_MSG_CS_JoinRoom      MsgId = 123  // 加入房间请求
	MsgId_MSG_SC_JoinRoom      MsgId = 124  // 加入房间响应
	MsgId_MSG_CS_MatchRoom     MsgId = 125  // 匹配房间请求
	MsgId_MSG_SC_MatchRoom     MsgId = 126  // 匹配房间响应
	MsgId_MSG_CS_ExitRoom      MsgId = 127  // 退出房间请求
	MsgId_MSG_SC_ExitRoom      MsgId = 128  // 退出房间请求
	MsgId_MSG_CS_NHWCReady     MsgId = 1001 // 你画我猜准备请求
	MsgId_MSG_SC_NHWCReady     MsgId = 1002 // 你画我猜准备相应
	MsgId_MSG_SC_NHWCStart     MsgId = 1004 // 你画我猜游戏开始
	MsgId_MSG_SC_NHWCResult    MsgId = 1008 // 你画我猜游戏单轮游戏结束
	MsgId_MSG_SC_NHWCOver      MsgId = 1010 // 你画我猜游戏结束
	MsgId_MSG_CS_NHWCDrawClear MsgId = 1011 // 绘画清理请求
	MsgId_MSG_SC_NHWCDrawClear MsgId = 1012 // 绘画清理响应
	MsgId_MSG_CS_NHWCDrawWidth MsgId = 1013 // 绘画宽度请求
	MsgId_MSG_SC_NHWCDrawWidth MsgId = 1014 // 绘画宽度响应
	MsgId_MSG_CS_NHWCDrawColor MsgId = 1015 // 绘画颜色请求
	MsgId_MSG_SC_NHWCDrawColor MsgId = 1016 // 绘画颜色响应
	MsgId_MSG_CS_NHWCDrawPath  MsgId = 1017 // 游戏绘画path请求
	MsgId_MSG_SC_NHWCDrawPath  MsgId = 1018 // 游戏绘画path响应
	MsgId_MSG_CS_NHWCAnswer    MsgId = 1019 // 猜答案请求
	MsgId_MSG_SC_NHWCAnswer    MsgId = 1020 // 猜答案响应
)

// Enum value maps for MsgId.
var (
	MsgId_name = map[int32]string{
		0:    "MSG_Default",
		1:    "MSG_CS_Ping",
		2:    "MSG_SC_Pong",
		101:  "MSG_CS_Login",
		102:  "MSG_SC_Login",
		103:  "MSG_CS_Register",
		104:  "MSG_SC_Register",
		111:  "MSG_CS_HallInfo",
		112:  "MSG_SC_HallInfo",
		121:  "MSG_CS_CreateRoom",
		122:  "MSG_SC_CreateRoom",
		123:  "MSG_CS_JoinRoom",
		124:  "MSG_SC_JoinRoom",
		125:  "MSG_CS_MatchRoom",
		126:  "MSG_SC_MatchRoom",
		127:  "MSG_CS_ExitRoom",
		128:  "MSG_SC_ExitRoom",
		1001: "MSG_CS_NHWCReady",
		1002: "MSG_SC_NHWCReady",
		1004: "MSG_SC_NHWCStart",
		1008: "MSG_SC_NHWCResult",
		1010: "MSG_SC_NHWCOver",
		1011: "MSG_CS_NHWCDrawClear",
		1012: "MSG_SC_NHWCDrawClear",
		1013: "MSG_CS_NHWCDrawWidth",
		1014: "MSG_SC_NHWCDrawWidth",
		1015: "MSG_CS_NHWCDrawColor",
		1016: "MSG_SC_NHWCDrawColor",
		1017: "MSG_CS_NHWCDrawPath",
		1018: "MSG_SC_NHWCDrawPath",
		1019: "MSG_CS_NHWCAnswer",
		1020: "MSG_SC_NHWCAnswer",
	}
	MsgId_value = map[string]int32{
		"MSG_Default":          0,
		"MSG_CS_Ping":          1,
		"MSG_SC_Pong":          2,
		"MSG_CS_Login":         101,
		"MSG_SC_Login":         102,
		"MSG_CS_Register":      103,
		"MSG_SC_Register":      104,
		"MSG_CS_HallInfo":      111,
		"MSG_SC_HallInfo":      112,
		"MSG_CS_CreateRoom":    121,
		"MSG_SC_CreateRoom":    122,
		"MSG_CS_JoinRoom":      123,
		"MSG_SC_JoinRoom":      124,
		"MSG_CS_MatchRoom":     125,
		"MSG_SC_MatchRoom":     126,
		"MSG_CS_ExitRoom":      127,
		"MSG_SC_ExitRoom":      128,
		"MSG_CS_NHWCReady":     1001,
		"MSG_SC_NHWCReady":     1002,
		"MSG_SC_NHWCStart":     1004,
		"MSG_SC_NHWCResult":    1008,
		"MSG_SC_NHWCOver":      1010,
		"MSG_CS_NHWCDrawClear": 1011,
		"MSG_SC_NHWCDrawClear": 1012,
		"MSG_CS_NHWCDrawWidth": 1013,
		"MSG_SC_NHWCDrawWidth": 1014,
		"MSG_CS_NHWCDrawColor": 1015,
		"MSG_SC_NHWCDrawColor": 1016,
		"MSG_CS_NHWCDrawPath":  1017,
		"MSG_SC_NHWCDrawPath":  1018,
		"MSG_CS_NHWCAnswer":    1019,
		"MSG_SC_NHWCAnswer":    1020,
	}
)

func (x MsgId) Enum() *MsgId {
	p := new(MsgId)
	*p = x
	return p
}

func (x MsgId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgId) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[0].Descriptor()
}

func (MsgId) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[0]
}

func (x MsgId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgId.Descriptor instead.
func (MsgId) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0}
}

type RoomState int32

const (
	RoomState_None   RoomState = 0 // 未开始
	RoomState_Ready  RoomState = 1 // 准备
	RoomState_Draw   RoomState = 2 // 画画
	RoomState_Result RoomState = 3 // 结果
	RoomState_Over   RoomState = 4 // 结束
)

// Enum value maps for RoomState.
var (
	RoomState_name = map[int32]string{
		0: "None",
		1: "Ready",
		2: "Draw",
		3: "Result",
		4: "Over",
	}
	RoomState_value = map[string]int32{
		"None":   0,
		"Ready":  1,
		"Draw":   2,
		"Result": 3,
		"Over":   4,
	}
)

func (x RoomState) Enum() *RoomState {
	p := new(RoomState)
	*p = x
	return p
}

func (x RoomState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomState) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_proto_enumTypes[1].Descriptor()
}

func (RoomState) Type() protoreflect.EnumType {
	return &file_msg_proto_enumTypes[1]
}

func (x RoomState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomState.Descriptor instead.
func (RoomState) EnumDescriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1}
}

type CS_Ping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_Ping) Reset() {
	*x = CS_Ping{}
	mi := &file_msg_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_Ping) ProtoMessage() {}

func (x *CS_Ping) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_Ping.ProtoReflect.Descriptor instead.
func (*CS_Ping) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{0}
}

func (x *CS_Ping) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type SC_Pong struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_Pong) Reset() {
	*x = SC_Pong{}
	mi := &file_msg_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_Pong) ProtoMessage() {}

func (x *SC_Pong) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_Pong.ProtoReflect.Descriptor instead.
func (*SC_Pong) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{1}
}

func (x *SC_Pong) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type PlayerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HeadId        int32                  `protobuf:"varint,1,opt,name=headId,proto3" json:"headId,omitempty"`
	Account       string                 `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	NickName      string                 `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	mi := &file_msg_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerInfo) GetHeadId() int32 {
	if x != nil {
		return x.HeadId
	}
	return 0
}

func (x *PlayerInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *PlayerInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type RoomInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 房间id
	Rid int32 `protobuf:"varint,1,opt,name=rid,proto3" json:"rid,omitempty"`
	// 房间当前轮次
	GameNum int32 `protobuf:"varint,2,opt,name=gameNum,proto3" json:"gameNum,omitempty"`
	// 房间最大座位数
	Max int32 `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	// 房间状态
	State int32 `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	// 房间创建时间
	CreateTime int64 `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 倒计时 开始小局时长
	GameTime int64 `protobuf:"varint,6,opt,name=gameTime,proto3" json:"gameTime,omitempty"`
	// 倒计时 小局游戏结束到下一局时长
	ResultTime int64 `protobuf:"varint,7,opt,name=resultTime,proto3" json:"resultTime,omitempty"`
	// 提示z
	Hint string `protobuf:"bytes,8,opt,name=hint,proto3" json:"hint,omitempty"`
	// 单词
	Word string `protobuf:"bytes,9,opt,name=word,proto3" json:"word,omitempty"`
	// 单词索引
	WordIndex int32 `protobuf:"varint,10,opt,name=wordIndex,proto3" json:"wordIndex,omitempty"`
	// 画师
	Painter int32 `protobuf:"varint,11,opt,name=painter,proto3" json:"painter,omitempty"`
	// 房间所有玩家
	// map<int32, GameUserItem> mapPlayerInfo1 = 12;
	ArrPlayerInfo []*GameUserItem `protobuf:"bytes,12,rep,name=arrPlayerInfo,proto3" json:"arrPlayerInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomInfo) Reset() {
	*x = RoomInfo{}
	mi := &file_msg_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfo) ProtoMessage() {}

func (x *RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfo.ProtoReflect.Descriptor instead.
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{3}
}

func (x *RoomInfo) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *RoomInfo) GetGameNum() int32 {
	if x != nil {
		return x.GameNum
	}
	return 0
}

func (x *RoomInfo) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *RoomInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *RoomInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *RoomInfo) GetGameTime() int64 {
	if x != nil {
		return x.GameTime
	}
	return 0
}

func (x *RoomInfo) GetResultTime() int64 {
	if x != nil {
		return x.ResultTime
	}
	return 0
}

func (x *RoomInfo) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

func (x *RoomInfo) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *RoomInfo) GetWordIndex() int32 {
	if x != nil {
		return x.WordIndex
	}
	return 0
}

func (x *RoomInfo) GetPainter() int32 {
	if x != nil {
		return x.Painter
	}
	return 0
}

func (x *RoomInfo) GetArrPlayerInfo() []*GameUserItem {
	if x != nil {
		return x.ArrPlayerInfo
	}
	return nil
}

// *
// 房间某个玩家信息
type GameUserItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Plyer *PlayerInfo            `protobuf:"bytes,1,opt,name=plyer,proto3" json:"plyer,omitempty"`
	// 房间id
	Rid int32 `protobuf:"varint,2,opt,name=rid,proto3" json:"rid,omitempty"`
	// 座位
	Seat int32 `protobuf:"varint,3,opt,name=seat,proto3" json:"seat,omitempty"`
	// 分数
	Score int32 `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	// 是否准备
	IsReady bool `protobuf:"varint,5,opt,name=isReady,proto3" json:"isReady,omitempty"`
	// 是否在线
	IsOnline      bool `protobuf:"varint,6,opt,name=isOnline,proto3" json:"isOnline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameUserItem) Reset() {
	*x = GameUserItem{}
	mi := &file_msg_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameUserItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameUserItem) ProtoMessage() {}

func (x *GameUserItem) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameUserItem.ProtoReflect.Descriptor instead.
func (*GameUserItem) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{4}
}

func (x *GameUserItem) GetPlyer() *PlayerInfo {
	if x != nil {
		return x.Plyer
	}
	return nil
}

func (x *GameUserItem) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *GameUserItem) GetSeat() int32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *GameUserItem) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *GameUserItem) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

func (x *GameUserItem) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

// *
// 登录请求
type CS_Login struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ServerId      int32                  `protobuf:"varint,3,opt,name=serverId,proto3" json:"serverId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_Login) Reset() {
	*x = CS_Login{}
	mi := &file_msg_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_Login) ProtoMessage() {}

func (x *CS_Login) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_Login.ProtoReflect.Descriptor instead.
func (*CS_Login) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{5}
}

func (x *CS_Login) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CS_Login) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CS_Login) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

// *
// 登录响应
type SC_Login struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	PlayerInfo    *PlayerInfo            `protobuf:"bytes,3,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_Login) Reset() {
	*x = SC_Login{}
	mi := &file_msg_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_Login) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_Login) ProtoMessage() {}

func (x *SC_Login) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_Login.ProtoReflect.Descriptor instead.
func (*SC_Login) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{6}
}

func (x *SC_Login) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SC_Login) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SC_Login) GetPlayerInfo() *PlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

// *
// 注册请求
type CS_Register struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	HeadId        int32                  `protobuf:"varint,3,opt,name=headId,proto3" json:"headId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_Register) Reset() {
	*x = CS_Register{}
	mi := &file_msg_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_Register) ProtoMessage() {}

func (x *CS_Register) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_Register.ProtoReflect.Descriptor instead.
func (*CS_Register) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{7}
}

func (x *CS_Register) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CS_Register) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CS_Register) GetHeadId() int32 {
	if x != nil {
		return x.HeadId
	}
	return 0
}

// *
// 注册响应
type SC_Register struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_Register) Reset() {
	*x = SC_Register{}
	mi := &file_msg_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_Register) ProtoMessage() {}

func (x *SC_Register) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_Register.ProtoReflect.Descriptor instead.
func (*SC_Register) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{8}
}

func (x *SC_Register) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// *
// 大厅数据请求
type CS_HallInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_HallInfo) Reset() {
	*x = CS_HallInfo{}
	mi := &file_msg_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_HallInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_HallInfo) ProtoMessage() {}

func (x *CS_HallInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_HallInfo.ProtoReflect.Descriptor instead.
func (*CS_HallInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{9}
}

// *
// 大厅数据响应 repeated 数据写法
type SC_HallInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomArr       []*RoomInfo            `protobuf:"bytes,1,rep,name=roomArr,proto3" json:"roomArr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_HallInfo) Reset() {
	*x = SC_HallInfo{}
	mi := &file_msg_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_HallInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_HallInfo) ProtoMessage() {}

func (x *SC_HallInfo) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_HallInfo.ProtoReflect.Descriptor instead.
func (*SC_HallInfo) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{10}
}

func (x *SC_HallInfo) GetRoomArr() []*RoomInfo {
	if x != nil {
		return x.RoomArr
	}
	return nil
}

// *
// 创建房间请求
type CS_CreateRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_CreateRoom) Reset() {
	*x = CS_CreateRoom{}
	mi := &file_msg_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_CreateRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_CreateRoom) ProtoMessage() {}

func (x *CS_CreateRoom) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_CreateRoom.ProtoReflect.Descriptor instead.
func (*CS_CreateRoom) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{11}
}

// *
// 创建房间响应
type SC_CreateRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	RoomInfo      *RoomInfo              `protobuf:"bytes,2,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_CreateRoom) Reset() {
	*x = SC_CreateRoom{}
	mi := &file_msg_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_CreateRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_CreateRoom) ProtoMessage() {}

func (x *SC_CreateRoom) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_CreateRoom.ProtoReflect.Descriptor instead.
func (*SC_CreateRoom) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{12}
}

func (x *SC_CreateRoom) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SC_CreateRoom) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

// *
// 加入房间请求
type CS_JoinRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        int32                  `protobuf:"varint,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_JoinRoom) Reset() {
	*x = CS_JoinRoom{}
	mi := &file_msg_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_JoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_JoinRoom) ProtoMessage() {}

func (x *CS_JoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_JoinRoom.ProtoReflect.Descriptor instead.
func (*CS_JoinRoom) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{13}
}

func (x *CS_JoinRoom) GetRoomId() int32 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

// *
// 加入房间响应
type SC_JoinRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	RoomInfo      *RoomInfo              `protobuf:"bytes,2,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_JoinRoom) Reset() {
	*x = SC_JoinRoom{}
	mi := &file_msg_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_JoinRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_JoinRoom) ProtoMessage() {}

func (x *SC_JoinRoom) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_JoinRoom.ProtoReflect.Descriptor instead.
func (*SC_JoinRoom) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{14}
}

func (x *SC_JoinRoom) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SC_JoinRoom) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

// *
// 匹配房间请求
type CS_MatchRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_MatchRoom) Reset() {
	*x = CS_MatchRoom{}
	mi := &file_msg_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_MatchRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_MatchRoom) ProtoMessage() {}

func (x *CS_MatchRoom) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_MatchRoom.ProtoReflect.Descriptor instead.
func (*CS_MatchRoom) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{15}
}

// *
// 匹配房间响应
type SC_MatchRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	RoomInfo      *RoomInfo              `protobuf:"bytes,2,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_MatchRoom) Reset() {
	*x = SC_MatchRoom{}
	mi := &file_msg_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_MatchRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_MatchRoom) ProtoMessage() {}

func (x *SC_MatchRoom) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_MatchRoom.ProtoReflect.Descriptor instead.
func (*SC_MatchRoom) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{16}
}

func (x *SC_MatchRoom) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SC_MatchRoom) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

// *
// 准备请求
type CS_NHWCReady struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_NHWCReady) Reset() {
	*x = CS_NHWCReady{}
	mi := &file_msg_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_NHWCReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_NHWCReady) ProtoMessage() {}

func (x *CS_NHWCReady) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_NHWCReady.ProtoReflect.Descriptor instead.
func (*CS_NHWCReady) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{17}
}

// *
// 准备响应
type SC_NHWCReady struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	RoomInfo      *RoomInfo              `protobuf:"bytes,2,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_NHWCReady) Reset() {
	*x = SC_NHWCReady{}
	mi := &file_msg_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_NHWCReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_NHWCReady) ProtoMessage() {}

func (x *SC_NHWCReady) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_NHWCReady.ProtoReflect.Descriptor instead.
func (*SC_NHWCReady) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{18}
}

func (x *SC_NHWCReady) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SC_NHWCReady) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

// *
// 游戏开始
type SC_NHWCStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomInfo      *RoomInfo              `protobuf:"bytes,1,opt,name=roomInfo,proto3" json:"roomInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_NHWCStart) Reset() {
	*x = SC_NHWCStart{}
	mi := &file_msg_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_NHWCStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_NHWCStart) ProtoMessage() {}

func (x *SC_NHWCStart) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_NHWCStart.ProtoReflect.Descriptor instead.
func (*SC_NHWCStart) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{19}
}

func (x *SC_NHWCStart) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

// *
// 小局游戏结束
type SC_NHWCResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          string                 `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_NHWCResult) Reset() {
	*x = SC_NHWCResult{}
	mi := &file_msg_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_NHWCResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_NHWCResult) ProtoMessage() {}

func (x *SC_NHWCResult) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_NHWCResult.ProtoReflect.Descriptor instead.
func (*SC_NHWCResult) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{20}
}

func (x *SC_NHWCResult) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

// *
// 全部游戏结束
type SC_NHWCOver struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          string                 `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_NHWCOver) Reset() {
	*x = SC_NHWCOver{}
	mi := &file_msg_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_NHWCOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_NHWCOver) ProtoMessage() {}

func (x *SC_NHWCOver) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_NHWCOver.ProtoReflect.Descriptor instead.
func (*SC_NHWCOver) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{21}
}

func (x *SC_NHWCOver) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

// *
// 游戏绘画清理请求
type CS_NHWCDrawClear struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_NHWCDrawClear) Reset() {
	*x = CS_NHWCDrawClear{}
	mi := &file_msg_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_NHWCDrawClear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_NHWCDrawClear) ProtoMessage() {}

func (x *CS_NHWCDrawClear) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_NHWCDrawClear.ProtoReflect.Descriptor instead.
func (*CS_NHWCDrawClear) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{22}
}

// *
// 游戏绘画清理响应
type SC_NHWCDrawClear struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_NHWCDrawClear) Reset() {
	*x = SC_NHWCDrawClear{}
	mi := &file_msg_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_NHWCDrawClear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_NHWCDrawClear) ProtoMessage() {}

func (x *SC_NHWCDrawClear) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_NHWCDrawClear.ProtoReflect.Descriptor instead.
func (*SC_NHWCDrawClear) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{23}
}

// *
// 游戏绘画width请求
type CS_NHWCDrawWidth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         int32                  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_NHWCDrawWidth) Reset() {
	*x = CS_NHWCDrawWidth{}
	mi := &file_msg_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_NHWCDrawWidth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_NHWCDrawWidth) ProtoMessage() {}

func (x *CS_NHWCDrawWidth) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_NHWCDrawWidth.ProtoReflect.Descriptor instead.
func (*CS_NHWCDrawWidth) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{24}
}

func (x *CS_NHWCDrawWidth) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

// *
// 游戏绘画width响应
type SC_NHWCDrawWidth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         int32                  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_NHWCDrawWidth) Reset() {
	*x = SC_NHWCDrawWidth{}
	mi := &file_msg_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_NHWCDrawWidth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_NHWCDrawWidth) ProtoMessage() {}

func (x *SC_NHWCDrawWidth) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_NHWCDrawWidth.ProtoReflect.Descriptor instead.
func (*SC_NHWCDrawWidth) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{25}
}

func (x *SC_NHWCDrawWidth) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

// *
// 游戏绘画color请求
type CS_NHWCDrawColor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Color         string                 `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_NHWCDrawColor) Reset() {
	*x = CS_NHWCDrawColor{}
	mi := &file_msg_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_NHWCDrawColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_NHWCDrawColor) ProtoMessage() {}

func (x *CS_NHWCDrawColor) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_NHWCDrawColor.ProtoReflect.Descriptor instead.
func (*CS_NHWCDrawColor) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{26}
}

func (x *CS_NHWCDrawColor) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

// *
// 游戏绘画color响应
type SC_NHWCDrawColor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Color         string                 `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_NHWCDrawColor) Reset() {
	*x = SC_NHWCDrawColor{}
	mi := &file_msg_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_NHWCDrawColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_NHWCDrawColor) ProtoMessage() {}

func (x *SC_NHWCDrawColor) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_NHWCDrawColor.ProtoReflect.Descriptor instead.
func (*SC_NHWCDrawColor) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{27}
}

func (x *SC_NHWCDrawColor) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type Vec2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float32                `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vec2) Reset() {
	*x = Vec2{}
	mi := &file_msg_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vec2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vec2) ProtoMessage() {}

func (x *Vec2) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vec2.ProtoReflect.Descriptor instead.
func (*Vec2) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{28}
}

func (x *Vec2) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vec2) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type NHWCPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsStart       bool                   `protobuf:"varint,1,opt,name=isStart,proto3" json:"isStart,omitempty"`
	V2            *Vec2                  `protobuf:"bytes,2,opt,name=v2,proto3" json:"v2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NHWCPoint) Reset() {
	*x = NHWCPoint{}
	mi := &file_msg_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NHWCPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NHWCPoint) ProtoMessage() {}

func (x *NHWCPoint) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NHWCPoint.ProtoReflect.Descriptor instead.
func (*NHWCPoint) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{29}
}

func (x *NHWCPoint) GetIsStart() bool {
	if x != nil {
		return x.IsStart
	}
	return false
}

func (x *NHWCPoint) GetV2() *Vec2 {
	if x != nil {
		return x.V2
	}
	return nil
}

// *
// 游戏绘画path请求
type CS_NHWCDrawPath struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PointArr      []*NHWCPoint           `protobuf:"bytes,1,rep,name=pointArr,proto3" json:"pointArr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_NHWCDrawPath) Reset() {
	*x = CS_NHWCDrawPath{}
	mi := &file_msg_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_NHWCDrawPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_NHWCDrawPath) ProtoMessage() {}

func (x *CS_NHWCDrawPath) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_NHWCDrawPath.ProtoReflect.Descriptor instead.
func (*CS_NHWCDrawPath) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{30}
}

func (x *CS_NHWCDrawPath) GetPointArr() []*NHWCPoint {
	if x != nil {
		return x.PointArr
	}
	return nil
}

// *
// 游戏绘画path响应
type SC_NHWCDrawPath struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PointArr      []*NHWCPoint           `protobuf:"bytes,1,rep,name=pointArr,proto3" json:"pointArr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_NHWCDrawPath) Reset() {
	*x = SC_NHWCDrawPath{}
	mi := &file_msg_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_NHWCDrawPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_NHWCDrawPath) ProtoMessage() {}

func (x *SC_NHWCDrawPath) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_NHWCDrawPath.ProtoReflect.Descriptor instead.
func (*SC_NHWCDrawPath) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{31}
}

func (x *SC_NHWCDrawPath) GetPointArr() []*NHWCPoint {
	if x != nil {
		return x.PointArr
	}
	return nil
}

// *
// 退出房间请求
type CS_ExitRoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_ExitRoom) Reset() {
	*x = CS_ExitRoom{}
	mi := &file_msg_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_ExitRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_ExitRoom) ProtoMessage() {}

func (x *CS_ExitRoom) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_ExitRoom.ProtoReflect.Descriptor instead.
func (*CS_ExitRoom) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{32}
}

// *
// 退出房间响应
type SC_ExitRoom struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Code  int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 唯一标识 账号
	Account       string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_ExitRoom) Reset() {
	*x = SC_ExitRoom{}
	mi := &file_msg_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_ExitRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_ExitRoom) ProtoMessage() {}

func (x *SC_ExitRoom) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_ExitRoom.ProtoReflect.Descriptor instead.
func (*SC_ExitRoom) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{33}
}

func (x *SC_ExitRoom) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SC_ExitRoom) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

// *
// 猜答案请求
type CS_NHWCAnswer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Answer        string                 `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CS_NHWCAnswer) Reset() {
	*x = CS_NHWCAnswer{}
	mi := &file_msg_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CS_NHWCAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CS_NHWCAnswer) ProtoMessage() {}

func (x *CS_NHWCAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CS_NHWCAnswer.ProtoReflect.Descriptor instead.
func (*CS_NHWCAnswer) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{34}
}

func (x *CS_NHWCAnswer) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

// *
// 猜答案请求响应
type SC_NHWCAnswer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 座位号
	Seat int32 `protobuf:"varint,1,opt,name=seat,proto3" json:"seat,omitempty"`
	// 是否正确
	IsRight bool `protobuf:"varint,2,opt,name=isRight,proto3" json:"isRight,omitempty"`
	// 得分
	ArrPlayerInfo []*GameUserItem `protobuf:"bytes,3,rep,name=arrPlayerInfo,proto3" json:"arrPlayerInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SC_NHWCAnswer) Reset() {
	*x = SC_NHWCAnswer{}
	mi := &file_msg_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SC_NHWCAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SC_NHWCAnswer) ProtoMessage() {}

func (x *SC_NHWCAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_msg_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SC_NHWCAnswer.ProtoReflect.Descriptor instead.
func (*SC_NHWCAnswer) Descriptor() ([]byte, []int) {
	return file_msg_proto_rawDescGZIP(), []int{35}
}

func (x *SC_NHWCAnswer) GetSeat() int32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *SC_NHWCAnswer) GetIsRight() bool {
	if x != nil {
		return x.IsRight
	}
	return false
}

func (x *SC_NHWCAnswer) GetArrPlayerInfo() []*GameUserItem {
	if x != nil {
		return x.ArrPlayerInfo
	}
	return nil
}

var File_msg_proto protoreflect.FileDescriptor

var file_msg_proto_rawDesc = string([]byte{
	0x0a, 0x09, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x27, 0x0a, 0x07, 0x43, 0x53, 0x5f, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x27, 0x0a, 0x07, 0x53, 0x43, 0x5f,
	0x50, 0x6f, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x5a, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd3,
	0x02, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x67, 0x61, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0d, 0x61,
	0x72, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x61, 0x72, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x6c, 0x79, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x70, 0x6c, 0x79, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65,
	0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x5c,
	0x0a, 0x08, 0x43, 0x53, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x08,
	0x53, 0x43, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x5b, 0x0a, 0x0b, 0x43, 0x53, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x49, 0x64,
	0x22, 0x21, 0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x53, 0x5f, 0x48, 0x61, 0x6c, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x36, 0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x48, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x41, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x41, 0x72, 0x72, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x53,
	0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x4e, 0x0a, 0x0d, 0x53,
	0x43, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x29, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x25, 0x0a, 0x0b, 0x43,
	0x53, 0x5f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x22, 0x4c, 0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x0e, 0x0a, 0x0c, 0x43, 0x53, 0x5f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d,
	0x22, 0x4d, 0x0a, 0x0c, 0x53, 0x43, 0x5f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x0e, 0x0a, 0x0c, 0x43, 0x53, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22,
	0x4d, 0x0a, 0x0c, 0x53, 0x43, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x39,
	0x0a, 0x0c, 0x53, 0x43, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x29,
	0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x23, 0x0a, 0x0d, 0x53, 0x43, 0x5f,
	0x4e, 0x48, 0x57, 0x43, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x21,
	0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x53, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x44, 0x72, 0x61, 0x77,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x43, 0x5f, 0x4e, 0x48, 0x57, 0x43,
	0x44, 0x72, 0x61, 0x77, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x22, 0x28, 0x0a, 0x10, 0x43, 0x53, 0x5f,
	0x4e, 0x48, 0x57, 0x43, 0x44, 0x72, 0x61, 0x77, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x22, 0x28, 0x0a, 0x10, 0x53, 0x43, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x44, 0x72,
	0x61, 0x77, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0x28, 0x0a,
	0x10, 0x43, 0x53, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x28, 0x0a, 0x10, 0x53, 0x43, 0x5f, 0x4e, 0x48,
	0x57, 0x43, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x22, 0x22, 0x0a, 0x04, 0x56, 0x65, 0x63, 0x32, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0x40, 0x0a, 0x09, 0x4e, 0x48, 0x57, 0x43, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x02,
	0x76, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x56,
	0x65, 0x63, 0x32, 0x52, 0x02, 0x76, 0x32, 0x22, 0x3d, 0x0a, 0x0f, 0x43, 0x53, 0x5f, 0x4e, 0x48,
	0x57, 0x43, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x4e, 0x48, 0x57, 0x43, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x22, 0x3d, 0x0a, 0x0f, 0x53, 0x43, 0x5f, 0x4e, 0x48, 0x57,
	0x43, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x72, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x4e, 0x48, 0x57, 0x43, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x72, 0x72, 0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x53, 0x5f, 0x45, 0x78, 0x69, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x3b, 0x0a, 0x0b, 0x53, 0x43, 0x5f, 0x45, 0x78, 0x69, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x27, 0x0a, 0x0d, 0x43, 0x53, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x76, 0x0a, 0x0d, 0x53, 0x43,
	0x5f, 0x4e, 0x48, 0x57, 0x43, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x37, 0x0a, 0x0d, 0x61, 0x72, 0x72,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0d, 0x61, 0x72, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x2a, 0xda, 0x05, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x0f, 0x0a, 0x0b,
	0x4d, 0x53, 0x47, 0x5f, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x53, 0x5f, 0x50, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f, 0x50, 0x6f, 0x6e, 0x67, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x53, 0x5f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10,
	0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x10, 0x66, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x53, 0x5f, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x10, 0x67, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x53, 0x47, 0x5f,
	0x53, 0x43, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x10, 0x68, 0x12, 0x13, 0x0a,
	0x0f, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x53, 0x5f, 0x48, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x10, 0x6f, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f, 0x48, 0x61, 0x6c,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x70, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x53, 0x47, 0x5f, 0x43,
	0x53, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x79, 0x12, 0x15,
	0x0a, 0x11, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x10, 0x7a, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x53, 0x5f,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x7b, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x53,
	0x47, 0x5f, 0x53, 0x43, 0x5f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x7c, 0x12,
	0x14, 0x0a, 0x10, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x53, 0x5f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x6f, 0x6f, 0x6d, 0x10, 0x7d, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x7e, 0x12, 0x13, 0x0a, 0x0f, 0x4d,
	0x53, 0x47, 0x5f, 0x43, 0x53, 0x5f, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x7f,
	0x12, 0x14, 0x0a, 0x0f, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f, 0x45, 0x78, 0x69, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x10, 0x80, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x53,
	0x5f, 0x4e, 0x48, 0x57, 0x43, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0xe9, 0x07, 0x12, 0x15, 0x0a,
	0x10, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x10, 0xea, 0x07, 0x12, 0x15, 0x0a, 0x10, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f, 0x4e,
	0x48, 0x57, 0x43, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0xec, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x4d,
	0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x10, 0xf0, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f, 0x4e, 0x48,
	0x57, 0x43, 0x4f, 0x76, 0x65, 0x72, 0x10, 0xf2, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x4d, 0x53, 0x47,
	0x5f, 0x43, 0x53, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x10, 0xf3, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f, 0x4e,
	0x48, 0x57, 0x43, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x10, 0xf4, 0x07, 0x12,
	0x19, 0x0a, 0x14, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x53, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x44, 0x72,
	0x61, 0x77, 0x57, 0x69, 0x64, 0x74, 0x68, 0x10, 0xf5, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x4d, 0x53,
	0x47, 0x5f, 0x53, 0x43, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x44, 0x72, 0x61, 0x77, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x10, 0xf6, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x53, 0x5f,
	0x4e, 0x48, 0x57, 0x43, 0x44, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0xf7, 0x07,
	0x12, 0x19, 0x0a, 0x14, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x44,
	0x72, 0x61, 0x77, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0xf8, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x4d,
	0x53, 0x47, 0x5f, 0x43, 0x53, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61,
	0x74, 0x68, 0x10, 0xf9, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x4d, 0x53, 0x47, 0x5f, 0x53, 0x43, 0x5f,
	0x4e, 0x48, 0x57, 0x43, 0x44, 0x72, 0x61, 0x77, 0x50, 0x61, 0x74, 0x68, 0x10, 0xfa, 0x07, 0x12,
	0x16, 0x0a, 0x11, 0x4d, 0x53, 0x47, 0x5f, 0x43, 0x53, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x10, 0xfb, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x4d, 0x53, 0x47, 0x5f, 0x53,
	0x43, 0x5f, 0x4e, 0x48, 0x57, 0x43, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x10, 0xfc, 0x07, 0x2a,
	0x40, 0x0a, 0x09, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x72, 0x61, 0x77, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x76, 0x65, 0x72, 0x10,
	0x04, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_msg_proto_rawDescOnce sync.Once
	file_msg_proto_rawDescData []byte
)

func file_msg_proto_rawDescGZIP() []byte {
	file_msg_proto_rawDescOnce.Do(func() {
		file_msg_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_msg_proto_rawDesc), len(file_msg_proto_rawDesc)))
	})
	return file_msg_proto_rawDescData
}

var file_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_msg_proto_goTypes = []any{
	(MsgId)(0),               // 0: msg.MsgId
	(RoomState)(0),           // 1: msg.RoomState
	(*CS_Ping)(nil),          // 2: msg.CS_Ping
	(*SC_Pong)(nil),          // 3: msg.SC_Pong
	(*PlayerInfo)(nil),       // 4: msg.PlayerInfo
	(*RoomInfo)(nil),         // 5: msg.RoomInfo
	(*GameUserItem)(nil),     // 6: msg.GameUserItem
	(*CS_Login)(nil),         // 7: msg.CS_Login
	(*SC_Login)(nil),         // 8: msg.SC_Login
	(*CS_Register)(nil),      // 9: msg.CS_Register
	(*SC_Register)(nil),      // 10: msg.SC_Register
	(*CS_HallInfo)(nil),      // 11: msg.CS_HallInfo
	(*SC_HallInfo)(nil),      // 12: msg.SC_HallInfo
	(*CS_CreateRoom)(nil),    // 13: msg.CS_CreateRoom
	(*SC_CreateRoom)(nil),    // 14: msg.SC_CreateRoom
	(*CS_JoinRoom)(nil),      // 15: msg.CS_JoinRoom
	(*SC_JoinRoom)(nil),      // 16: msg.SC_JoinRoom
	(*CS_MatchRoom)(nil),     // 17: msg.CS_MatchRoom
	(*SC_MatchRoom)(nil),     // 18: msg.SC_MatchRoom
	(*CS_NHWCReady)(nil),     // 19: msg.CS_NHWCReady
	(*SC_NHWCReady)(nil),     // 20: msg.SC_NHWCReady
	(*SC_NHWCStart)(nil),     // 21: msg.SC_NHWCStart
	(*SC_NHWCResult)(nil),    // 22: msg.SC_NHWCResult
	(*SC_NHWCOver)(nil),      // 23: msg.SC_NHWCOver
	(*CS_NHWCDrawClear)(nil), // 24: msg.CS_NHWCDrawClear
	(*SC_NHWCDrawClear)(nil), // 25: msg.SC_NHWCDrawClear
	(*CS_NHWCDrawWidth)(nil), // 26: msg.CS_NHWCDrawWidth
	(*SC_NHWCDrawWidth)(nil), // 27: msg.SC_NHWCDrawWidth
	(*CS_NHWCDrawColor)(nil), // 28: msg.CS_NHWCDrawColor
	(*SC_NHWCDrawColor)(nil), // 29: msg.SC_NHWCDrawColor
	(*Vec2)(nil),             // 30: msg.Vec2
	(*NHWCPoint)(nil),        // 31: msg.NHWCPoint
	(*CS_NHWCDrawPath)(nil),  // 32: msg.CS_NHWCDrawPath
	(*SC_NHWCDrawPath)(nil),  // 33: msg.SC_NHWCDrawPath
	(*CS_ExitRoom)(nil),      // 34: msg.CS_ExitRoom
	(*SC_ExitRoom)(nil),      // 35: msg.SC_ExitRoom
	(*CS_NHWCAnswer)(nil),    // 36: msg.CS_NHWCAnswer
	(*SC_NHWCAnswer)(nil),    // 37: msg.SC_NHWCAnswer
}
var file_msg_proto_depIdxs = []int32{
	6,  // 0: msg.RoomInfo.arrPlayerInfo:type_name -> msg.GameUserItem
	4,  // 1: msg.GameUserItem.plyer:type_name -> msg.PlayerInfo
	4,  // 2: msg.SC_Login.playerInfo:type_name -> msg.PlayerInfo
	5,  // 3: msg.SC_HallInfo.roomArr:type_name -> msg.RoomInfo
	5,  // 4: msg.SC_CreateRoom.roomInfo:type_name -> msg.RoomInfo
	5,  // 5: msg.SC_JoinRoom.roomInfo:type_name -> msg.RoomInfo
	5,  // 6: msg.SC_MatchRoom.roomInfo:type_name -> msg.RoomInfo
	5,  // 7: msg.SC_NHWCReady.roomInfo:type_name -> msg.RoomInfo
	5,  // 8: msg.SC_NHWCStart.roomInfo:type_name -> msg.RoomInfo
	30, // 9: msg.NHWCPoint.v2:type_name -> msg.Vec2
	31, // 10: msg.CS_NHWCDrawPath.pointArr:type_name -> msg.NHWCPoint
	31, // 11: msg.SC_NHWCDrawPath.pointArr:type_name -> msg.NHWCPoint
	6,  // 12: msg.SC_NHWCAnswer.arrPlayerInfo:type_name -> msg.GameUserItem
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_msg_proto_init() }
func file_msg_proto_init() {
	if File_msg_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_msg_proto_rawDesc), len(file_msg_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msg_proto_goTypes,
		DependencyIndexes: file_msg_proto_depIdxs,
		EnumInfos:         file_msg_proto_enumTypes,
		MessageInfos:      file_msg_proto_msgTypes,
	}.Build()
	File_msg_proto = out.File
	file_msg_proto_goTypes = nil
	file_msg_proto_depIdxs = nil
}
